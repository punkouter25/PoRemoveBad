name: Build and Deploy PoRemoveBad

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      AZURE_ENV_NAME: ${{ vars.AZURE_ENV_NAME }}
      AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Install azd
      run: |
        curl -fsSL https://aka.ms/install-azd.sh | bash
        echo "/home/runner/.azd/bin" >> $GITHUB_PATH

    - name: Log in with Azure (Federated Credentials)
      if: ${{ env.AZURE_CLIENT_ID != '' }}
      run: |
        azd auth login `
          --client-id "$Env:AZURE_CLIENT_ID" `
          --federated-credential-provider "github" `
          --tenant-id "$Env:AZURE_TENANT_ID"
      shell: pwsh

    - name: Log in with Azure (Client Credentials)
      if: ${{ env.AZURE_CLIENT_ID == '' }}
      run: |
        azd auth login `
          --client-id "$Env:AZURE_CLIENT_ID" `
          --client-secret "$Env:AZURE_CLIENT_SECRET" `
          --tenant-id "$Env:AZURE_TENANT_ID"
      shell: pwsh
      env:
        AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}

    - name: Azure Dev Deploy
      run: azd up --no-prompt
      env:
        AZURE_ENV_NAME: ${{ vars.AZURE_ENV_NAME }}
        AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}
        AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
